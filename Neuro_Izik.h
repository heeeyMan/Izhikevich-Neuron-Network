#pragma once
#include <vector>
class Neuron_Izik{
public:
    Neuron_Izik();
    Neuron_Izik(int i);
    Neuron_Izik(double V_peak, int i_syn);
    double K_x(double x_old, double y_old, int time); // права€ часть первого уравнени€ системы описывающей динамику мембранного потенциала нейрона »жикевича
    double K_y(double x_old, double y_old); // права€ часть второго уравнени€ системы описывающей динамику мембранного потенциала нейрона »жикевича
    double I_ex; // ток внешнего воздействи€
    double V_peak; // пороговое значение мембранного потенциала после которого он делает спайк и сбрасываютс€ значени€ V и U
    mutable int i; // индивидуальный номер нейрона
    double a;   // вспомогательна€ переменна€
    double b;   // вспомогательна€ переменна€
    double d;   // вспомогательна€ переменна€
    double k;   // вспомогательна€ переменна€
    double c;   // значение к которому сбрасываетс€ потенциал, если его порог больше V_peak, м¬
    double V_r; // вспомогательна€ переменна€, м¬
    double V_t; // вспомогательна€ переменна€, м¬
    double V0; // начальное значение дл€ мембранного потенциала, м¬
    double U0;   // начальное значение дл€ вспомогательной переменной, м¬
    double Cm;  // электрическа€ Ємкость нейрона, размерность пк‘

    /////////////////////////////////  переменные дл€ счета нейрона методом –унге- утта ////////////////////////////////////////////
    double x;
    double y;
    double x_old;
    double y_old;
    double K1_x, K2_x, K3_x, K4_x;
    double K1_y, K2_y, K3_y, K4_y;
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    double h; // размер шага
    int T_sim;  // врем€ симул€ции
    int N_sim;  // количество точек отсчета

    mutable std::vector<double> I_syn; // вектор значений синаптического тока нейрона
    std::vector<double> V; // вектор значений мембранного потенциала в каждую точку отсчета, величина N_sim
    std::vector<double> U; // вектор значений вспомогательной переменной в каждую точку отсчета, величина N_sim
};
bool operator < (const Neuron_Izik& a, const Neuron_Izik& b);

